/* config.h.in.  Generated automatically from configure.in by autoheader.  */
/*
 * Copyright (c) 1992, Brian Berliner and Jeff Polk
 * Copyright (c) 1989-1992, Brian Berliner
 * 
 * You may distribute under the terms of the GNU General Public License as
 * specified in the README file that comes with the CVS 1.4 kit.
 * 
 * This file holds (most of) the configuration tweaks that can be made to
 * customize CVS for your site.  CVS comes configured for a typical SunOS 4.x
 * environment.  The comments for each configurable item are intended to be
 * self-explanatory.  All #defines are tested first to see if an over-riding
 * option was specified on the "make" command line.
 * 
 * If special libraries are needed, you will have to edit the Makefile.in file
 * or the configure script and/or config.h.in directly.  Sorry.
 */


/* Define if on AIX 3.
   System headers sometimes define this.
   We just want to avoid a redefinition error message.  */
#ifndef _ALL_SOURCE
#undef _ALL_SOURCE
#endif

/* Define to empty if the keyword does not work.  */
#undef const

/* Define to `int' if <sys/types.h> doesn't define.  */
#undef gid_t

/* Define if you support file names longer than 14 characters.  */
#undef HAVE_LONG_FILE_NAMES

/* Define if you have <sys/wait.h> that is POSIX.1 compatible.  */
#undef HAVE_SYS_WAIT_H

/* Define if utime(file, NULL) sets file's timestamp to the present.  */
#undef HAVE_UTIME_NULL

/* Define if on MINIX.  */
#undef _MINIX

/* Define to `int' if <sys/types.h> doesn't define.  */
#undef mode_t

/* Define to `int' if <sys/types.h> doesn't define.  */
#undef pid_t

/* Define if the system does not provide POSIX.1 features except
   with this defined.  */
#undef _POSIX_1_SOURCE

/* Define if you need to in order for stat and other things to work.  */
#undef _POSIX_SOURCE

/* Define as the return type of signal handlers (int or void).  */
#undef RETSIGTYPE

/* Define to `unsigned' if <sys/types.h> doesn't define.  */
#undef size_t

/* Define if the `S_IS*' macros in <sys/stat.h> do not work properly.  */
#undef STAT_MACROS_BROKEN

/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS

/* Define if you can safely include both <sys/time.h> and <time.h>.  */
#undef TIME_WITH_SYS_TIME

/* Define to `int' if <sys/types.h> doesn't define.  */
#undef uid_t

#define PACKAGE  "cvs"
#define VERSION  "$Name$"

/* Define if you have MIT Kerberos version 4 available.  */
#undef HAVE_KERBEROS

/* Define if you want CVS to be able to be a remote repository client.  */
#undef CLIENT_SUPPORT

/* Define if you want CVS to be able to serve repositories to remote
   clients.  */
#undef SERVER_SUPPORT

/* Define if you want to use the password authenticated server.  */
#undef AUTH_SERVER_SUPPORT

/* Define if you want encryption support.  */
#undef ENCRYPTION

/* Define if you have the connect function.  */
#undef HAVE_CONNECT

#ifdef CLIENT_SUPPORT
/*
 * The "rsh" program to execute when starting the server via rsh.
 *
 * This can be over-ridden at run time by setting $CVS_RSH
 * or by using the -R option on the command-line.
 */
#ifndef RSH_DFLT
#define RSH_DFLT "rsh"
#endif
#endif /* CLIENT_SUPPORT */

#ifdef CLIENT_SUPPORT
/*
 * The "patch" program to run when using the CVS server and accepting
 * patches across the network.  Specify a full pathname if your site
 * wants to use a particular patch.
 */
#ifndef PATCH_DFLT
#define PATCH_DFLT "patch"
#endif
#endif /* CLIENT_SUPPORT */

#ifdef CLIENT_SUPPORT
/*
 * the "cvs" program to execute on the server .
 *
 * This can be over-ridden at run time by setting $CVS_SERVER or alternately a
 * small wrapper script can be placed on the server in the first directory
 * searched in the path used by rshd to invoke the correct cvs server binary.
 */
#ifndef CVS_SERVER_DFLT
#define CVS_SERVER_DFLT "cvs"
#endif
#endif /* CLIENT_SUPPORT */

/*
 * The "diff" program to execute when creating patch output.  This
 * "diff" must support the "-c" option for context diffing.  Specify a
 * full pathname if your site wants to use a particular diff.  Note
 * that unlike the diff used with RCS, you *must not* supply -a here
 * (doing so will cause the server to generate patches which patch
 * cannot handle in some cases).
 * 
 * NOTE: this program is only used for the ``patch'' sub-command (and
 * for ``update'' if you are using the server).  The other commands
 * use rcsdiff which will use whatever version of diff was specified
 * when rcsdiff was built on your system.
 */
#ifndef DIFF_DFLT
#define DIFF_DFLT "diff"
#endif

/*
 * By default, RCS programs are executed with the shell or through
 * execlp(), so the user's PATH environment variable is searched.  If
 * you'd like to bind all RCS programs to a certain directory (perhaps
 * one not in most people's PATH) then set the default in RCSBIN_DFLT.
 * Note that setting this here will cause all RCS programs to be
 * executed from this directory, unless the user overrides the default
 * with the RCSBIN environment variable or the "-b" option to CVS.
 * 
 * If you use the password-authenticating server, then you need to
 * make sure that the server can find the RCS programs to invoke them.
 * The authenticating server starts out running as root, and then
 * switches to run as the appropriate user once authentication is
 * complete.  But no actual shell is ever started by that user, so the
 * PATH environment variable may not contain the directory with the
 * RCS binaries, even though if that user logged in normally, PATH
 * would include the directory.
 *
 * One way to solve this problem is to set RCSBIN_DFLT here.  An
 * alternative is to make sure that root has the right directory in
 * its path already.  Another, probably better alternative is to
 * specify -b in /etc/inetd.conf.
 *
 * You may also have to set RCSBIN_DFLT here if there's no global
 * start-up script run for users by rshd and your RCS programs are not
 * in a directory in the default PATH assigned by rshd.
 *
 * This define should be either the empty string ("") or a full
 * pathname to the directory containing all the installed programs
 * from the RCS distribution.
 */
#ifndef RCSBIN_DFLT
#define RCSBIN_DFLT ""
#endif

/*
 * The password-authenticating server creates a temporary checkout of
 * the affected files.  The variable TMPDIR_DFLT (or even better, the
 * command-line option "-T" in the line for CVS in /etc/inetd.conf)
 * can be used to specify the used directory.  This directory will
 * also be used for other temporary files.
 */
#ifndef TMPDIR_DFLT
#define TMPDIR_DFLT "/tmp"
#endif

/*
 * The default editor to use, if one does not specify the "-e" option
 * to cvs, or does not have an EDITOR environment variable.  I set
 * this to just "vi", and use the shell to find where "vi" actually
 * is.  This allows sites with /usr/bin/vi or /usr/ucb/vi to work
 * equally well (assuming that your PATH is reasonable).
 */
#ifndef EDITOR_DFLT
#define EDITOR_DFLT "vi"
#endif

/*
 * The cvs admin command is restricted to the members of the group
 * CVS_ADMIN_GROUP.  If this group does not exist, all users are
 * allowed to run cvs admin.  To disable the cvs admin for all users,
 * create an empty group CVS_ADMIN_GROUP.  To disable access control
 * for cvs admin, comment out the define below.
 */
#ifndef CVS_ADMIN_GROUP
#define CVS_ADMIN_GROUP "cvsadmin"
#endif

/*
 * When committing or importing files, you must enter a log message.
 * Normally, you can do this either via the -m flag on the command
 * line or an editor will be started for you.  If you like to use
 * logging templates (the rcsinfo file within the $CVSROOT/CVSROOT
 * directory), you might want to force people to use the editor even
 * if they specify a message with -m.  Enabling FORCE_USE_EDITOR will
 * cause the -m message to be appended to the temp file when the
 * editor is started.
 */
#ifndef FORCE_USE_EDITOR
#undef FORCE_USE_EDITOR
#endif

/* Define if you have the crypt function.  */
#undef HAVE_CRYPT

/* Define if you have the dup2 function.  */
#undef HAVE_DUP2

/* Define if you have the fchdir function.  */
#undef HAVE_FCHDIR

/* Define if you have the fchmod function.  */
#undef HAVE_FCHMOD

/* Define if you have the fsync function.  */
#undef HAVE_FSYNC

/* Define if you have the ftime function.  */
#undef HAVE_FTIME

/* Define if you have the ftruncate function.  */
#undef HAVE_FTRUNCATE

/* Define if you have the getpagesize function.  */
#undef HAVE_GETPAGESIZE

/* Define if you have the getspnam function.  */
#undef HAVE_GETSPNAM

/* Define if you have the getwd function.  */
#undef HAVE_GETWD

/* Define if you have the initgroups function.  */
#undef HAVE_INITGROUPS

/* Define if you have the krb_get_err_text function.  */
#undef HAVE_KRB_GET_ERR_TEXT

/* Define if you have the mkdir function.  */
#undef HAVE_MKDIR

/* Define if you have the mkfifo function.  */
#undef HAVE_MKFIFO

/* Define if you have the putenv function.  */
#undef HAVE_PUTENV

/* Define if you have the readlink function.  */
#undef HAVE_READLINK

/* Define if you have the rename function.  */
#undef HAVE_RENAME

/* Define if you have the setvbuf function.  */
#undef HAVE_SETVBUF

/* Define if you have the sigaction function.  */
#undef HAVE_SIGACTION

/* Define if you have the sigblock function.  */
#undef HAVE_SIGBLOCK

/* Define if you have the sigprocmask function.  */
#undef HAVE_SIGPROCMASK

/* Define if you have the sigsetmask function.  */
#undef HAVE_SIGSETMASK

/* Define if you have the sigvec function.  */
#undef HAVE_SIGVEC

/* Define if you have the strdup function.  */
#undef HAVE_STRDUP

/* Define if you have the strerror function.  */
#undef HAVE_STRERROR

/* Define if you have the strstr function.  */
#undef HAVE_STRSTR

/* Define if you have the strtoul function.  */
#undef HAVE_STRTOUL

/* Define if you have the timezone function.  */
#undef HAVE_TIMEZONE

/* Define if you have the tzset function.  */
#undef HAVE_TZSET

/* Define if you have the valloc function.  */
#undef HAVE_VALLOC

/* Define if you have the vasprintf function.  */
#undef HAVE_VASPRINTF

/* Define if you have the vfork function.  */
#undef HAVE_VFORK

/* Define if you have the vprintf function.  */
#undef HAVE_VPRINTF

/* Define if you have the waitpid function.  */
#undef HAVE_WAITPID

/* Define if you have the <direct.h> header file.  */
#undef HAVE_DIRECT_H

/* Define if you have the <dirent.h> header file.  */
#undef HAVE_DIRENT_H

/* Define if you have the <errno.h> header file.  */
#undef HAVE_ERRNO_H

/* Define if you have the <fcntl.h> header file.  */
#undef HAVE_FCNTL_H

/* Define if you have the <io.h> header file.  */
#undef HAVE_IO_H

/* Define if you have the <memory.h> header file.  */
#undef HAVE_MEMORY_H

/* Define if you have the <ndbm.h> header file.  */
#undef HAVE_NDBM_H

/* Define if you have the <ndir.h> header file.  */
#undef HAVE_NDIR_H

/* Define if you have the <string.h> header file.  */
#undef HAVE_STRING_H

/* Define if you have the <sys/bsdtypes.h> header file.  */
#undef HAVE_SYS_BSDTYPES_H

/* Define if you have the <sys/dir.h> header file.  */
#undef HAVE_SYS_DIR_H

/* Define if you have the <sys/ndir.h> header file.  */
#undef HAVE_SYS_NDIR_H

/* Define if you have the <sys/param.h> header file.  */
#undef HAVE_SYS_PARAM_H

/* Define if you have the <sys/resource.h> header file.  */
#undef HAVE_SYS_RESOURCE_H

/* Define if you have the <sys/select.h> header file.  */
#undef HAVE_SYS_SELECT_H

/* Define if you have the <sys/time.h> header file.  */
#undef HAVE_SYS_TIME_H

/* Define if you have the <sys/timeb.h> header file.  */
#undef HAVE_SYS_TIMEB_H

/* Define if you have the <unistd.h> header file.  */
#undef HAVE_UNISTD_H

/* Define if you have the <utime.h> header file.  */
#undef HAVE_UTIME_H

/* Define if you have the crypt library (-lcrypt).  */
#undef HAVE_LIBCRYPT

/* Define if you have the inet library (-linet).  */
#undef HAVE_LIBINET

/* Define if you have the nsl library (-lnsl).  */
#undef HAVE_LIBNSL

/* Define if you have the nsl_s library (-lnsl_s).  */
#undef HAVE_LIBNSL_S

/* Define if you have the sec library (-lsec).  */
#undef HAVE_LIBSEC

/* Define if you have the socket library (-lsocket).  */
#undef HAVE_LIBSOCKET

/* The remaining things are not worthy of automatic configuration? */

/*
 * Should we build the password-authenticating client?  Whether to
 * include the password-authenticating _server_, on the other hand, is
 * set in config.h.
 */
#ifdef CLIENT_SUPPORT
#define AUTH_CLIENT_SUPPORT 1
#endif

/*
 * CVS provides the most features when used in conjunction with the
 * Version-5 release of RCS.  Thus, it is the default.  This also
 * assumes that GNU diff Version-1.15 is being used as well -- you
 * will have to configure your RCS V5 release separately to make this
 * the case. If you do not have RCS V5 and GNU diff V1.15, comment out
 * this define. You should not try mixing and matching other
 * combinations of these tools.
 */
#define HAVE_RCS5

/*
 * If, before installing this version of CVS, you were running RCS V4
 * AND you are installing this CVS and RCS V5 and GNU diff 1.15 all at
 * the same time, you should turn on the following define.  It only
 * exists to try to do reasonable things with your existing checked
 * out files when you upgrade to RCS V5, since the keyword expansion
 * formats have changed with RCS V5.
 * 
 * If you already have been running with RCS5, or haven't been running
 * with CVS yet at all, or are sticking with RCS V4 for now, leave the
 * commented out.
 */
/* #undef HAD_RCS4 */

/*
 * For portability and heterogeneity reasons, CVS is shipped by
 * default using my own text-file version of the ndbm database library
 * in the src/myndbm.c file.  If you want better performance and are
 * not concerned about heterogeneous hosts accessing your modules
 * file, turn this option off.
 */
#define	MY_NDBM

/*
 * The default umask to use when creating or otherwise setting file or
 * directory permissions in the repository.  Must be a value in the
 * range of 0 through 0777.  For example, a value of 002 allows group
 * rwx access and world rx access; a value of 007 allows group rwx
 * access but no world access.  This value is overridden by the value
 * of the CVSUMASK environment variable, which is interpreted as an
 * octal number.
 */
#ifndef UMASK_DFLT
#define	UMASK_DFLT	002
#endif

/*
 * The Repository file holds the path to the directory within the
 * source repository that contains the RCS ,v files for each CVS
 * working directory.  This path is either a full-path or a path
 * relative to CVSROOT.
 * 
 * The only advantage that I can see to having a relative path is that
 * one can change the physical location of the master source
 * repository, change one's CVSROOT environment variable, and CVS will
 * work without problems.  I recommend using full-paths.
 */
#ifndef RELATIVE_REPOS
/* #define	RELATIVE_REPOS	 */
#endif

/*
 * When locking the repository, some sites like to remove locks and
 * assume the program that created them went away if the lock has
 * existed for a long time.  This used to be the default for previous
 * versions of CVS.  CVS now attempts to be much more robust, so lock
 * files should not be left around by mistake. The new behaviour will
 * never remove old locks (they must now be removed by hand).
 * Enabling CVS_FUDGELOCKS will cause CVS to remove locks that are
 * older than CVSLCKAGE seconds.
 * 
 * Use of this option is NOT recommended.
 */
#ifndef CVS_FUDGELOCKS
/* #define CVS_FUDGELOCKS */
#endif

/*
 * When committing a permanent change, CVS and RCS make a log entry of
 * who committed the change.  If you are committing the change logged
 * in as "root" (not under "su" or other root-priv giving program),
 * CVS/RCS cannot determine who is actually making the change.
 *
 * As such, by default, CVS disallows changes to be committed by users
 * logged in as "root".  You can disable this option by commenting out
 * the lines below.
 */
#ifndef CVS_BADROOT
#define	CVS_BADROOT
#endif

/*
 * Define this to enable the SETXID support.  The way to use this is
 * to create a group with no users in it (except perhaps cvs
 * administrators), set the cvs executable to setgid that group, chown
 * all the repository files to that group, and change all directory
 * permissions in the repository to 770.  The last person to modify a
 * file will own it, but as long as directory permissions are set
 * right that won't matter.  You'll need a system which inherits file
 * groups from the parent directory.  I don't know how carefully this
 * has been inspected for security holes.
 */
#ifndef SETXID_SUPPORT
/* #define SETXID_SUPPORT */
#endif

/*
 * If you are working with a large remote repository and a 'cvs
 * checkout' is swamping your network and memory, define these to
 * enable flow control.  You will end up with even less probability of
 * a consistent checkout (see Concurrency in cvs.texinfo), but CVS
 * doesn't try to guarantee that anyway.  The master server process
 * will monitor how far it is getting behind, if it reaches the high
 * water mark, it will signal the child process to stop generating
 * data when convenient (ie: no locks are held, currently at the
 * beginning of a new directory).  Once the buffer has drained
 * sufficiently to reach the low water mark, it will be signalled to
 * start again.  You may override the default hi/low watermarks here
 * too.
 */
#define SERVER_FLOWCONTROL
#define SERVER_HI_WATER (2 * 1024 * 1024)
#define SERVER_LO_WATER (1 * 1024 * 1024)

/* End of CVS configuration section */

/*
 * Externs that are included in libc, but are used frequently enough
 * to warrant defining here.
 */
#ifndef STDC_HEADERS
extern void exit ();
#endif

#ifndef getwd
extern char *getwd ();
#endif
