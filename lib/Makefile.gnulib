## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Automake, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Invoked as: gnulib-tool --import gettext vasnprintf regex atexit save-cwd dirname exit exitfail extensions fnmatch-posix fnmatch mkstemp getopt stdbool getline getnline getndelim2 gethostname strcase getpass-gnu gettimeofday timespec gettime unlocked-io tzset restrict time_r mktime minmax memmove nanosleep stat lstat strerror vasprintf malloc realloc strftime xsize getpagesize md5 stdint yesno allocsa setenv getdate readlink xreadlink xgethostname mkdir rename dup2 strstr ftruncate strtoul pathmax xalloc-die pagealign_alloc closeout
# Reproduce by: gnulib-tool --import --dir=. --lib=libgnu --source-base=lib --m4-base=m4   alloca alloca-opt allocsa atexit chdir-long closeout dirname dup2 error exit exitfail extensions fnmatch fnmatch-posix fpending ftruncate getcwd getdate gethostname getline getndelim2 getnline getopt getpagesize getpass-gnu gettext gettime gettimeofday lstat malloc md5 memmove mempcpy memrchr minmax mkdir mkstemp mktime nanosleep openat pagealign_alloc pathmax quotearg readlink realloc regex rename restrict rpmatch save-cwd setenv stat stdbool stdint strcase strerror strftime strstr strtol strtoul time_r timespec tzset unlocked-io vasnprintf vasprintf xalloc xalloc-die xgetcwd xgethostname xreadlink xsize yesno

AUTOMAKE_OPTIONS = 1.5 gnits no-dependencies

noinst_LIBRARIES = libgnu.a

libgnu_a_SOURCES =
libgnu_a_LIBADD = @LIBOBJS@
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

## begin gnulib module alloca


libgnu_a_LIBADD += @ALLOCA@
## end   gnulib module alloca

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)
EXTRA_DIST += alloca_.h

# We need the following in order to create an <alloca.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnu_a_OBJECTS): $(ALLOCA_H)
alloca.h: alloca_.h
	cp $(srcdir)/alloca_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

## end   gnulib module alloca-opt

## begin gnulib module allocsa

libgnu_a_SOURCES += allocsa.h allocsa.c
EXTRA_DIST += allocsa.valgrind

## end   gnulib module allocsa

## begin gnulib module closeout

libgnu_a_SOURCES += closeout.h closeout.c

## end   gnulib module closeout

## begin gnulib module dirname

libgnu_a_SOURCES += dirname.h dirname.c basename.c stripslash.c

## end   gnulib module dirname

## begin gnulib module exit

libgnu_a_SOURCES += exit.h

## end   gnulib module exit

## begin gnulib module exitfail

libgnu_a_SOURCES += exitfail.h exitfail.c

## end   gnulib module exitfail

## begin gnulib module fnmatch

BUILT_SOURCES += $(FNMATCH_H)
EXTRA_DIST += fnmatch_.h fnmatch_loop.c

# We need the following in order to create an <fnmatch.h> when the system
# doesn't have one that supports the required API.
all-local $(libgnu_a_OBJECTS): $(FNMATCH_H)
fnmatch.h: fnmatch_.h
	cp $(srcdir)/fnmatch_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += fnmatch.h fnmatch.h-t

## end   gnulib module fnmatch

## begin gnulib module fpending

libgnu_a_SOURCES += __fpending.h

## end   gnulib module fpending

## begin gnulib module getcwd

libgnu_a_SOURCES += getcwd.h

## end   gnulib module getcwd

## begin gnulib module getdate

libgnu_a_SOURCES += getdate.h getdate.y
BUILT_SOURCES += getdate.c
MAINTAINERCLEANFILES += getdate.c

## end   gnulib module getdate

## begin gnulib module getline

libgnu_a_SOURCES += getline.h
EXTRA_DIST += getndelim2.h getndelim2.c

## end   gnulib module getline

## begin gnulib module getndelim2

EXTRA_DIST += getndelim2.h getndelim2.c

## end   gnulib module getndelim2

## begin gnulib module getnline

libgnu_a_SOURCES += getnline.h getnline.c

## end   gnulib module getnline

## begin gnulib module getopt

BUILT_SOURCES += $(GETOPT_H)
EXTRA_DIST += getopt_.h getopt_int.h

# We need the following in order to create an <getopt.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnu_a_OBJECTS): $(GETOPT_H)
getopt.h: getopt_.h
	cp $(srcdir)/getopt_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += getopt.h getopt.h-t

## end   gnulib module getopt

## begin gnulib module getpagesize

libgnu_a_SOURCES += getpagesize.h

## end   gnulib module getpagesize

## begin gnulib module getpass-gnu

libgnu_a_SOURCES += getpass.h

## end   gnulib module getpass-gnu

## begin gnulib module gettext

libgnu_a_SOURCES += gettext.h

## end   gnulib module gettext

## begin gnulib module md5

libgnu_a_SOURCES += md5.h md5.c

## end   gnulib module md5

## begin gnulib module minmax

libgnu_a_SOURCES += minmax.h

## end   gnulib module minmax

## begin gnulib module pathmax

libgnu_a_SOURCES += pathmax.h

## end   gnulib module pathmax

## begin gnulib module quotearg

libgnu_a_SOURCES += quotearg.h quotearg.c

## end   gnulib module quotearg

## begin gnulib module regex

libgnu_a_SOURCES += regex.h

## end   gnulib module regex

## begin gnulib module setenv

libgnu_a_SOURCES += setenv.h

## end   gnulib module setenv

## begin gnulib module stat

libgnu_a_SOURCES += stat-macros.h

## end   gnulib module stat

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)
EXTRA_DIST += stdbool_.h

# We need the following in order to create an <stdbool.h> when the system
# doesn't have one that works.
all-local $(libgnu_a_OBJECTS): $(STDBOOL_H)
stdbool.h: stdbool_.h
	sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

## end   gnulib module stdbool

## begin gnulib module stdint

BUILT_SOURCES += $(STDINT_H)
EXTRA_DIST += stdint_.h

# We need the following in order to create an <stdint.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnu_a_OBJECTS): $(STDINT_H)
stdint.h: stdint_.h
	sed -e 's/@''HAVE_LONG_64BIT''@/$(HAVE_LONG_64BIT)/g;s/@''HAVE_LONGLONG_64BIT@/$(HAVE_LONGLONG_64BIT)/g' < $(srcdir)/stdint_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdint.h stdint.h-t

## end   gnulib module stdint

## begin gnulib module strcase

libgnu_a_SOURCES += strcase.h

## end   gnulib module strcase

## begin gnulib module strftime

libgnu_a_SOURCES += strftime.c strftime.h

## end   gnulib module strftime

## begin gnulib module strstr

libgnu_a_SOURCES += strstr.h

## end   gnulib module strstr

## begin gnulib module time_r

libgnu_a_SOURCES += time_r.h

## end   gnulib module time_r

## begin gnulib module timespec

libgnu_a_SOURCES += timespec.h

## end   gnulib module timespec

## begin gnulib module unlocked-io

libgnu_a_SOURCES += unlocked-io.h

## end   gnulib module unlocked-io

## begin gnulib module vasnprintf

libgnu_a_SOURCES += printf-args.h printf-parse.h vasnprintf.h

## end   gnulib module vasnprintf

## begin gnulib module vasprintf

libgnu_a_SOURCES += vasprintf.h

## end   gnulib module vasprintf

## begin gnulib module xalloc

libgnu_a_SOURCES += xalloc.h xmalloc.c

## end   gnulib module xalloc

## begin gnulib module xalloc-die

libgnu_a_SOURCES += xalloc-die.c

## end   gnulib module xalloc-die

## begin gnulib module xgetcwd

libgnu_a_SOURCES += xgetcwd.h xgetcwd.c

## end   gnulib module xgetcwd

## begin gnulib module xgethostname

libgnu_a_SOURCES += xgethostname.h xgethostname.c

## end   gnulib module xgethostname

## begin gnulib module xreadlink

libgnu_a_SOURCES += xreadlink.h xreadlink.c

## end   gnulib module xreadlink

## begin gnulib module xsize

libgnu_a_SOURCES += xsize.h

## end   gnulib module xsize

## begin gnulib module yesno

libgnu_a_SOURCES += yesno.c yesno.h

## end   gnulib module yesno


# Makefile.am ends here
