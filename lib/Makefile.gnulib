## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Automake, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
#
# Invoked as: gnulib-tool --import gettext vasnprintf regex atexit save-cwd dirname exit exitfail extensions fnmatch-posix fnmatch mkstemp getopt
# Reproduce by: gnulib-tool --import --dir=. --lib=libgnu --source-base=lib --m4-base=m4   alloca alloca-opt atexit dirname exit exitfail extensions fnmatch fnmatch-posix getopt gettext mkstemp pathmax regex restrict save-cwd vasnprintf xalloc xgetcwd xsize

AUTOMAKE_OPTIONS = 1.8 gnits

noinst_LIBRARIES = libgnu.a

libgnu_a_SOURCES =
libgnu_a_LIBADD = @LIBOBJS@
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =
BUILT_SOURCES += $(ALLOCA_H)
EXTRA_DIST += alloca_.h

# We need the following in order to create an <alloca.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnu_a_OBJECTS): $(ALLOCA_H)
alloca.h: alloca_.h
	cp $(srcdir)/alloca_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

libgnu_a_LIBADD += @ALLOCA@
BUILT_SOURCES += $(ALLOCA_H)
EXTRA_DIST += alloca_.h

# We need the following in order to create an <alloca.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnu_a_OBJECTS): $(ALLOCA_H)
alloca.h: alloca_.h
	cp $(srcdir)/alloca_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t


libgnu_a_SOURCES += dirname.h dirname.c basename.c stripslash.c

libgnu_a_SOURCES += exit.h

libgnu_a_SOURCES += exitfail.h exitfail.c


BUILT_SOURCES += $(FNMATCH_H)
EXTRA_DIST += fnmatch_.h fnmatch_loop.c

# We need the following in order to create an <fnmatch.h> when the system
# doesn't have one that supports the required API.
all-local $(libgnu_a_OBJECTS): $(FNMATCH_H)
fnmatch.h: fnmatch_.h
	cp $(srcdir)/fnmatch_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += fnmatch.h fnmatch.h-t


BUILT_SOURCES += $(GETOPT_H)
EXTRA_DIST += getopt_.h getopt_int.h

# We need the following in order to create an <getopt.h> when the system
# doesn't have one that works with the given compiler.
all-local $(libgnu_a_OBJECTS): $(GETOPT_H)
getopt.h: getopt_.h
	cp $(srcdir)/getopt_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += getopt.h getopt.h-t

libgnu_a_SOURCES += gettext.h


libgnu_a_SOURCES += pathmax.h

libgnu_a_SOURCES += regex.h


libgnu_a_SOURCES += save-cwd.h save-cwd.c

libgnu_a_SOURCES += printf-args.h printf-parse.h vasnprintf.h

libgnu_a_SOURCES += xalloc.h xmalloc.c

libgnu_a_SOURCES += xgetcwd.h xgetcwd.c

libgnu_a_SOURCES += xsize.h


# Makefile.am ends here
