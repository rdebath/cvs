* Trivial test of the checking in changes to the new CCVS module...

*         We need some version numbers really badly.  Are there some
  (and Charles Hannum is just not including them in his reports), or do
  we simply have no reliable way to distinguish between the various
  versions of rCVS people on the list are running?
  
          Now that I think of it, version numbers present a problem when
  people can update their sources anytime and rebuild.  I think the
  solution is to increment a minor version number *every* time a bug is
  fixed, so we can identify uniquely what someone is running when they
  submit a report.  This implies recording the version increments in the
  ChangeLog; that way we can just look to see where a particular version
  lies in relation to the flow of changing code.
  
          Should we be doing same with Guppy?  I guess not -- it's only
  important when you have people who are updating directly from your
  development tree, which is the case with the remote-cvs folks.
  
          Thoughts?


* We don't understand the relationship between modules and subdirs
  very well.  However, it is certainly the case that

          CVSROOT=<local-cvs-repository> cvs checkout cvs

                        and

          CVSROOT=<remote-cvs-repository> cvs checkout cvs

        ought to produce the same dir tree, and they don't.  On floss,
  checking out cvs gets cygnus/cvs/..., whereas on totoro it gets
  cvs/... bad, bad, bad, Bad, BAD.  Charles Hannum has noticed this too,
  see immediately below:


* From: "Charles M. Hannum" <mycroft@ai.mit.edu>
  To: remote-cvs@cyclic.com
  Subject: Yet another bug
  Date: Thu, 23 Feb 1995 21:28:31 -0500
  
  Modules don't work correctly remotely.  e.g.  If I have a module `foo'
  that points to `src/bin/foo', and I type `cvs get foo':
  
  1) Locally, CVS checks it out into a directory named `foo'.
  2) Remotely, CVS checks it out into a directory named `src/bin/foo'.
  
  The latter is incorrect.


* Partly because of the above problem, there is a name confusion about
  Remote CVS.  We are maintaining a cvs tree, which to remote updaters
  appears as a subdir of cygnus/, when in fact we are neither cygnus
  nor the standard disty of cvs.  If possible, we should fix the above
  bug and rename the tree to "rcvs" or something, what say?


* Is it still the case that cvs tries to use Perl and fails, so that
  installers need to fix by hand the line in
  $repository/CVSROOT/loginfo to read:

  DEFAULT       (echo ""; echo $USER; date; cat) >> $CVSROOT/CVSROOT/commitlog

  If so, we ought to either make it work as intended or take out the
  attempted Perl entirely.


* (Charles Hannum <mycroft@ai.mit.edu>) has these bugs:

  I just tossed remote CVS at a fairly large source tree that I already
  had, and noticed a few problems:

  1) server.c assumes that /usr/tmp is a valid default for the place to
  store files uploaded from the client.  There are a number of systems
  that now use /var/tmp.  These should probably be detected by autoconf.

  2) The server deals rather ungracefully with the tmp directory
  becoming full.

  3) There's some oddness with relative paths in Repository files that
  causes the directory prefix to be added twice; e.g. if I have CVSROOT
  set to `machine:/this/dir', and I try to update in a directory whose
  Repository file says `src/bin', the server looks in
  `/this/dir/machine:/this/dir/src/bin'.

  4) This isn't specific to remote CVS, but apparently the times stored
  in the Entries files are not GMT.  I have a checked out tree copied
  from another machine in a different time zone, and when I try to
  update it, CVS thinks that all the files are modified and sends them
  to the server for comparison.  (That's why I noticed #1.)
  [ See his followup below, though.  -K ]
  

* (Charles Hannum <mycroft@ai.mit.edu>)
  It turns out that the old version of CVS I was using wrote the time
  stamps in local time, but the new one writes and expects them in GMT.
  I have *no idea* how the old version actually read and compared the
  time stamps, and managed to deal with DST correctly, but I have time
  stamps that were in DST and ones that weren't, and it seemed to deal
  correctly.  I'm afraid to look any further.
  [ So shall we assume that this is fixed in rcvs?  -K ]
  
  Anyway, the path of least resistance seems to be to suffer an
  expensive update once.
  
  I still need to fix the relative path problem, though...


* From: "Charles M. Hannum" <mycroft@ai.mit.edu>
  To: jimb@duality.gnu.ai.mit.edu, roland@duality.gnu.ai.mit.edu
  Subject: Serious flaw in remote CVS
  Date: Wed, 22 Feb 1995 20:54:36 -0500

  I just found a major flaw in the current implementation.  Because the
  sockets are not changed to non-blocking mode, write(2)s can hang.  In
  some cases, this happens on both sides at the same time, with the
  socket buffers full in both directions.  This causes a deadlock,
  because both processes are stuck in I/O wait and thus never drain
  their input queues.
  
  Until this is fixed, I can't use it.  I'll look at the problem myself
  at some point, but I don't know when.
  

  From: "Charles M. Hannum" <mycroft@ai.mit.edu>
  To: remote-cvs@cyclic.com
  Cc: jimb@totoro.bio.indiana.edu
  Subject: Re: forwarded message from Charles M. Hannum
  Date: Wed, 22 Feb 1995 22:07:07 -0500
  
  FYI, this happened because the tmp directory on the server became
  full.  Somehow the server started interpreting the files the client
  was sending as commands, and started spewing tons of errors.
  Apparently the errors are sent with blocking I/O, or something, and
  thus allowed the deadlock to happen.


* From: "Charles M. Hannum" <mycroft@ai.mit.edu>
  To: remote-cvs@cyclic.com
  Subject: Regarding that relative path problem
  Date: Thu, 23 Feb 1995 02:41:51 -0500

  This is actually more serious.  If you have `bar.com:/foo' as your CVS
  root directory, then:

  1) When you check things out, the Repository files will contain
  `/foo/...' (i.e. without the machine name), which makes little sense.

  2) If you instead have a relative path, when the Repository file is
  read, `bar.com:/foo' is prepended.  This is sent to the server, but
  confuses it, because it's not expecting the machine name to be
  prepended.

  A slightly klugy fix would be to have the client prepend the machine
  name when writing a new Repository file, and strip it off before
  sending one to the server.  This would be backward-compatible with the
  current arrangement.


* From: "Charles M. Hannum" <mycroft@ai.mit.edu>
  To: remote-cvs@cyclic.com
  Subject: Another bug
  Date: Thu, 23 Feb 1995 21:26:19 -0500
  
  `cvs add' doesn't work correctly remotely.  The ,t and ,p files are
  not created.  This causes the server to dump core because it tries to
  fclose(NULL) in checkaddfile().


  From: "Charles M. Hannum" <mycroft@ai.mit.edu>
  To: jimb@totoro.bio.indiana.edu
  Cc: remote-cvs@cyclic.com
  Subject: Regarding `rcsmerge -E'
  Date: Thu, 23 Feb 1995 23:02:00 -0500
  
  
     Can you post more exact reproduction instructions?
  
  It happens every time I try to `cvs add' remotely.  The client does
  not create CVS/foo,p and CVS/foo,t files locally.  There are none
  created in the shadow tree on the server when I run `cvs commit'.
  When the server tries to commit the file, it core dumps trying to
  fclose(NULL) from checkaddfile().
  
  On some systems, fclose(NULL) is a noop, so CVS won't core dump.  In
  that case, the server just ignores the fact that the ,p file doesn't
  exist.  However, on some systems it does lose.
  
  For now, just having it not try to fclose() in that case is enough.
  Here's a patch:

Index: commit.c
===================================================================
RCS file: /b/source/CVS/othersrc/cvs/src/commit.c,v
retrieving revision 1.1.1.1
diff -c -2 -r1.1.1.1 commit.c
*** commit.c	1995/02/22 05:48:43	1.1.1.1
--- commit.c	1995/02/24 03:44:25
***************
*** 1493,1506 ****
  	/* If the file does not exist, no big deal.  In particular, the
  	   server does not (yet at least) create CVSEXT_OPT files.  */
! 	if (fp == NULL && errno != ENOENT)
! 	    error (1, errno, "cannot open %s", fname);
! 	while (fp != NULL && fgets (fname, sizeof (fname), fp) != NULL)
  	{
! 	    if ((cp = strrchr (fname, '\n')) != NULL)
! 		*cp = '\0';
! 	    if (*fname)
! 		run_arg (fname);
  	}
- 	(void) fclose (fp);
  	run_arg (rcs);
  	if ((retcode = run_exec (RUN_TTY, RUN_TTY, RUN_TTY, RUN_NORMAL)) != 0)
--- 1493,1512 ----
  	/* If the file does not exist, no big deal.  In particular, the
  	   server does not (yet at least) create CVSEXT_OPT files.  */
! 	if (fp == NULL)
  	{
! 	    if (errno != ENOENT)
! 		error (1, errno, "cannot open %s", fname);
! 	}
! 	else
! 	{
! 	    while (fgets (fname, sizeof (fname), fp) != NULL)
! 	    {
! 		if ((cp = strrchr (fname, '\n')) != NULL)
! 		    *cp = '\0';
! 		if (*fname)
! 		    run_arg (fname);
! 	    }
! 	    (void) fclose (fp);
  	}
  	run_arg (rcs);
  	if ((retcode = run_exec (RUN_TTY, RUN_TTY, RUN_TTY, RUN_NORMAL)) != 0)


* From: "Charles M. Hannum" <mycroft@ai.mit.edu>
  To: remote-cvs@cyclic.com
  Subject: Regarding `rcsmerge -E'
  Date: Thu, 23 Feb 1995 21:49:41 -0500
  
  In the source jimb is distributing, he's turned off the use of
  `rcsmerge -E' -- in one of the 2 invocations.  This needs to be made
  consistent.
  
  I've just grabbed RCS 5.6.7.4, which has the `-E' option, so I'm going
  to enable it in my copy of CVS.
  
  (You can get RCS 5.6.7.4 from
  ftp.cs.purdue.edu:/pub/RCS/rcs-5.6.7.4-beta.tar.gz.)


  From: Jim Blandy <jimb@totoro.bio.indiana.edu>
  To: "Charles M. Hannum" <mycroft@ai.mit.edu>
  Cc: remote-cvs@cyclic.com
  Subject: Regarding `rcsmerge -E'
  Date: Thu, 23 Feb 1995 22:05:13 -0500

  >In the source jimb is distributing, he's turned off the use of
  >`rcsmerge -E' -- in one of the 2 invocations.  This needs to be made
  >consistent.
  >
  >I've just grabbed RCS 5.6.7.4, which has the `-E' option, so I'm going
  >to enable it in my copy of CVS.
  
  Right you are.  I'm not clear on exactly what the -E option does, but
  if it should be used whenever `rcsmerge' is run, it should be added to
  the definition of RCS_RCSMERGE in rcs.h, not to any .c file.
  
  I've fixed this in the cvs module on totoro.cyclic.com:/u/src/master
  (by removing the other -E), and will put a new disty on ftp.cyclic.com
  soon.
  
  I think it's pretty goofy the way CVS hard-codes its usage of switches
  of the subprograms it uses.  Perhaps the autoconf script should check
  to see what switches the utility programs on the host machine seem to
  accept, and tweak the definitions in rcs.h appropriately.
  

* From: "Charles M. Hannum" <mycroft@ai.mit.edu>
  To: remote-cvs@cyclic.com
  Subject: Still one more bug
  Date: Sat, 25 Feb 1995 17:01:15 -0500
  
  mycroft@duality [1]; cd /usr/src/lib/libc
  mycroft@duality [1]; cvs diff -c2 '-D1 day ago' -Dnow
  cvs server: Diffing .
  cvs server: Diffing DB
  cvs [server aborted]: could not chdir to DB: No such file or directory
  mycroft@duality [1];
  
  `DB' is an old directory, which no longer has files in it, and is
  removed automatically when I use the `-P' option to checkout.
  
  This error doesn't occur when run locally.
  
  P.S.  Is anyone working on fixing these bugs?
