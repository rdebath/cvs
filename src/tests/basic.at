dnl Copyright (C) 2003 Derek Price, Ximbiot,
dnl			& The Free Software Foundation, Inc.
dnl
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2, or (at your option)
dnl any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.

AT_CVS_BANNER([Basic Functionality])

AT_CVS_SETUP([Operations on empty projects])

# Test a few operations, to ensure they gracefully do
# nothing in an empty directory.
AT_CHECK([cvs -q update])
AT_CHECK([cvs -q diff -c])
AT_CHECK([cvs -q status])
AT_CHECK([cvs -q update .])
AT_CHECK([cvs -q update ./])

AT_CLEANUP



AT_CVS_SETUP([Adding directories and files])

mkdir sdir

# FIXCVS
# Remote CVS gives the "cannot open CVS/Entries" error, which is
# clearly a bug, but not a simple one to fix.
AT_CHECK_NOESCAPE([cvs -n add sdir],[0],
[Directory $CVSROOT_DIR/project/sdir added to the repository
])
AT_CHECK([test -d $CVSROOT_DIR/project/sdir], [1])

AT_CHECK_NOESCAPE([cvs add sdir],,
[Directory $CVSROOT_DIR/project/sdir added to the repository
])

cd sdir
mkdir ssdir
AT_CHECK_NOESCAPE([cvs add ssdir],,
[Directory $CVSROOT_DIR/project/sdir/ssdir added to the repository
])

cd ssdir
echo ssfile >ssfile

# Trying to commit it without a "cvs add" should be an error.
# The "use `cvs add' to create an entry" message is the one
# that I consider to be more correct, but local cvs prints the
# "nothing known" message and noone has gotten around to fixing it.
AT_CHECK_NOESCAPE([cvs -q ci ssfile], [1],,
[AT_CVS_REMOTE(
[[$CPROG commit: use \`$CPROG add' to create an entry for ssfile
$CPROG [commit aborted]: correct above errors first!
]],
[[$CPROG commit: nothing known about \`ssfile'
$CPROG [commit aborted]: correct above errors first!
]])])

AT_CVS_CHECK_NORMALIZED([cvs add ssfile],,,
[$SPROG command: scheduling file \`ssfile' for addition
$SPROG command: use \`$SPROG commit' to add this file permanently
])

AT_CVS_CHECK_NORMALIZED([cvs tag tag0 ssfile],[1],,
[[$SPROG command: nothing known about ssfile
$SPROG [command aborted]: correct the above errors first!
]])

cd ../..
AT_CHECK_NOESCAPE([cvs -q ci -m add-it],,
[RCS file: $CVSROOT_DIR/project/sdir/ssdir/ssfile,v
done
Checking in sdir/ssdir/ssfile;
$CVSROOT_DIR/project/sdir/ssdir/ssfile,v  <--  ssfile
initial revision: 1.1
done
])

AT_CLEANUP # Adding files



# AT_CVS_BASIC_START_PROJECT()
#
# This project creates the following starter project.
#
#   project
#     \-sdir
#         \-ssdir
#             \-ssfile
#
m4_defun([AT_CVS_BASIC_START_PROJECT],
[mkdir sdir
AT_CHECK_NOESCAPE([cvs add sdir],,
[Directory $CVSROOT_DIR/project/sdir added to the repository
])
cd sdir
mkdir ssdir
AT_CHECK_NOESCAPE([cvs add ssdir],,
[Directory $CVSROOT_DIR/project/sdir/ssdir added to the repository
])
cd ssdir
echo ssfile >ssfile
AT_CVS_CHECK_NORMALIZED([cvs add ssfile],,,
[$SPROG command: scheduling file \`ssfile' for addition
$SPROG command: use \`$SPROG commit' to add this file permanently
])
AT_CHECK_NOESCAPE([cvs -q ci -m add-it],,
[RCS file: $CVSROOT_DIR/project/sdir/ssdir/ssfile,v
done
Checking in ssfile;
$CVSROOT_DIR/project/sdir/ssdir/ssfile,v  <--  ssfile
initial revision: 1.1
done
])
cd ../..
])dnl



AT_CVS_SETUP([tag, update, & diff])

AT_CVS_BASIC_START_PROJECT()

AT_CVS_CHECK_NORMALIZED([cvs -q tag BASE sdir/ssdir/ssfile],[1],,
[[$SPROG command: Attempt to add reserved tag name BASE
$SPROG [command aborted]: failed to set tag BASE to revision 1.1 in $CVSROOT_DIR/project/sdir/ssdir/ssfile,v
]])

AT_CHECK([cvs -q tag NOT_RESERVED],,[T sdir/ssdir/ssfile
])

AT_CHECK([cvs -q update])

echo "ssfile line 2" >>sdir/ssdir/ssfile
AT_CVS_CHECK_NORMALIZED([cvs -q diff -c],[1],
[Index: sdir/ssdir/ssfile
===================================================================
RCS file: $CVSROOT_DIR/project/sdir/ssdir/ssfile,v
retrieving revision 1.1
diff -c -r1.1 ssfile
*** sdir/ssdir/ssfile	RFCDATE	1.1
--- sdir/ssdir/ssfile	RFCDATE
***************
*** 1 ****
--- 1,2 ----
  ssfile
+ ssfile line 2
])

AT_CVS_CHECK_NORMALIZED([cvs -q diff -c -rBASE],[1],
[Index: sdir/ssdir/ssfile
===================================================================
RCS file: $CVSROOT_DIR/project/sdir/ssdir/ssfile,v
retrieving revision 1.1
diff -c -r1.1 ssfile
*** sdir/ssdir/ssfile	RFCDATE	1.1
--- sdir/ssdir/ssfile	RFCDATE
***************
*** 1 ****
--- 1,2 ----
  ssfile
+ ssfile line 2
])

AT_CVS_CHECK_NORMALIZED([cvs -q diff -c -rBASE -C3isacrowd],[1],
[Index: sdir/ssdir/ssfile
===================================================================
RCS file: $CVSROOT_DIR/project/sdir/ssdir/ssfile,v
retrieving revision 1.1
diff -c -C3isacrowd -r1.1 ssfile
],
[$SPROG command: invalid context length argument
])

AT_CLEANUP # tag, update, & diff



AT_CVS_SETUP([commit -r, diff -r, strange resurrections])

AT_CVS_BASIC_START_PROJECT()
echo "ssfile line 2" >>sdir/ssdir/ssfile

AT_CHECK_NOESCAPE([cvs -q ci -m modify-it],,
[Checking in sdir/ssdir/ssfile;
$CVSROOT_DIR/project/sdir/ssdir/ssfile,v  <--  ssfile
new revision: 1.2; previous revision: 1.1
done
])

AT_CHECK_NOESCAPE([cvs -q ci nonexist],[1],,
[[$CPROG commit: nothing known about \`nonexist'
$CPROG [commit aborted]: correct above errors first!
]])

AT_CHECK([cvs -q update .])

# Test the -f option to ci
cd sdir/ssdir
AT_CHECK([cvs -q ci -m not-modified ssfile])

AT_CHECK_NOESCAPE([cvs -q ci -f -m force-it],,
[Checking in ssfile;
$CVSROOT_DIR/project/sdir/ssdir/ssfile,v  <--  ssfile
new revision: 1.3; previous revision: 1.2
done
])

AT_CHECK_NOESCAPE([cvs -q ci -m bump-it -r 2.0],,
[Checking in ssfile;
$CVSROOT_DIR/project/sdir/ssdir/ssfile,v  <--  ssfile
new revision: 2.0; previous revision: 1.3
done
])

# -f should not be necessary, but it should be harmless.
# Also test the "-r 3" (rather than "-r 3.0") usage.
AT_CHECK_NOESCAPE([cvs -q ci -m bump-it -f -r 3],,
[Checking in ssfile;
$CVSROOT_DIR/project/sdir/ssdir/ssfile,v  <--  ssfile
new revision: 3.1; previous revision: 2.0
done
])

# Test using -r to create a branch
AT_CVS_CHECK_NORMALIZED([cvs -q ci -m bogus -r 3.0.0],[1],
[Checking in ssfile;
$CVSROOT_DIR/project/sdir/ssdir/ssfile,v  <--  ssfile
],
[$SPROG command: $CVSROOT_DIR/project/sdir/ssdir/ssfile,v: can't find branch point 3.0
$SPROG command: could not check in ssfile
])

AT_CHECK_NOESCAPE([cvs -q ci -m valid -r 3.1.2],,
[Checking in ssfile;
$CVSROOT_DIR/project/sdir/ssdir/ssfile,v  <--  ssfile
new revision: 3.1.2.1; previous revision: 3.1
done
])

# now get rid of the sticky tag and go back to the trunk
AT_CVS_CHECK_NORMALIZED([cvs -q up -A ./],,
[U ssfile
])

AT_CHECK([cvs -q diff -r1.2 -r1.3])

AT_CHECK([cvs -q diff -r1.2 -r1.3 -C 3isacrowd])

# If memory serves, some systems (AIX?) have a different message than
# "No such file or directory".  When rediscovered, they will need to be
# accomodated below.
AT_CVS_CHECK_NORMALIZED([cvs -q -d $at_group_dir/nonexist update],[1],,
[[$CPROG [command aborted]: $at_group_dir/nonexist/CVSROOT: No such file or directory
]])

# Test resurrecting with strange revision numbers
AT_CVS_CHECK_NORMALIZED([cvs rm -f ssfile],,,
[$SPROG command: scheduling \`ssfile' for removal
$SPROG command: use \`${SPROG} commit' to remove this file permanently
])

AT_CHECK_NOESCAPE([cvs -q ci -m remove],,
[Removing ssfile;
$CVSROOT_DIR/project/sdir/ssdir/ssfile,v  <--  ssfile
new revision: delete; previous revision: 3.1
done
])

AT_CHECK([cvs -q up -p -r 3.1 ./ssfile >ssfile])
AT_CVS_CHECK_NORMALIZED([cvs add ssfile],,,
[$SPROG command: re-adding file \`ssfile' (in place of dead revision 3.2)
$SPROG command: use \`$SPROG commit' to add this file permanently
])

AT_CHECK_NOESCAPE([cvs -q ci -m resurrect],,
[Checking in ssfile;
$CVSROOT_DIR/project/sdir/ssdir/ssfile,v  <--  ssfile
new revision: 3.3; previous revision: 3.2
done
])

AT_CLEANUP



AT_CVS_SETUP([annotate])

AT_CVS_BASIC_START_PROJECT()
echo "ssfile line 2" >>sdir/ssdir/ssfile
AT_CHECK_NOESCAPE([cvs -q ci -m modify-it],,
[Checking in sdir/ssdir/ssfile;
$CVSROOT_DIR/project/sdir/ssdir/ssfile,v  <--  ssfile
new revision: 1.2; previous revision: 1.1
done
])

AT_CVS_CHECK_ANNOTATE([cvs annotate],,
[1.1          (USERNAME DATE): ssfile
1.2          (USERNAME DATE): ssfile line 2
],
[
Annotations for sdir/ssdir/ssfile
***************
])

AT_CLEANUP



AT_CVS_SETUP([Resurrection])

AT_CVS_BASIC_START_PROJECT()

AT_CHECK([exit 77])

	  # As long as we have a file with a few revisions, test
	  # a few "cvs admin -o" invocations.
	  cd sdir/ssdir
	  dotest_fail basica-o1 "${testcvs} admin -o 1.2::1.2" \
"${CPROG} admin: while processing more than one file:
${CPROG} \[admin aborted\]: attempt to specify a numeric revision"
	  dotest basica-o2 "${testcvs} admin -o 1.2::1.2 ssfile" \
"RCS file: ${CVSROOT_DIR}/project/sdir/ssdir/ssfile,v
done"
	  dotest basica-o2a "${testcvs} admin -o 1.1::NOT_RESERVED ssfile" \
"RCS file: ${CVSROOT_DIR}/project/sdir/ssdir/ssfile,v
done"
	  dotest_fail basica-o2b "${testcvs} admin -o 1.1::NOT_EXIST ssfile" \
"RCS file: ${CVSROOT_DIR}/project/sdir/ssdir/ssfile,v
${SPROG} [a-z]*: ${CVSROOT_DIR}/project/sdir/ssdir/ssfile,v: Revision NOT_EXIST doesn't exist.
${SPROG} [a-z]*: RCS file for .ssfile. not modified\."
	  dotest basica-o3 "${testcvs} admin -o 1.2::1.3 ssfile" \
"RCS file: ${CVSROOT_DIR}/project/sdir/ssdir/ssfile,v
done"
	  dotest basica-o4 "${testcvs} admin -o 3.1:: ssfile" \
"RCS file: ${CVSROOT_DIR}/project/sdir/ssdir/ssfile,v
deleting revision 3\.3
deleting revision 3\.2
done"
	  dotest basica-o5 "${testcvs} admin -o ::1.1 ssfile" \
"RCS file: ${CVSROOT_DIR}/project/sdir/ssdir/ssfile,v
done"
	  dotest basica-o5a "${testcvs} -n admin -o 1.2::3.1 ssfile" \
"RCS file: ${CVSROOT_DIR}/project/sdir/ssdir/ssfile,v
deleting revision 2\.0
deleting revision 1\.3
done"
	  dotest basica-o6 "${testcvs} admin -o 1.2::3.1 ssfile" \
"RCS file: ${CVSROOT_DIR}/project/sdir/ssdir/ssfile,v
deleting revision 2\.0
deleting revision 1\.3
done"
	  dotest basica-o6a "${testcvs} admin -o 3.1.2: ssfile" \
"RCS file: ${CVSROOT_DIR}/project/sdir/ssdir/ssfile,v
deleting revision 3\.1\.2\.1
done"
	  dotest basica-o7 "${testcvs} log -N ssfile" "
RCS file: ${CVSROOT_DIR}/project/sdir/ssdir/ssfile,v
Working file: ssfile
head: 3\.1
branch:
locks: strict
access list:
keyword substitution: kv
total revisions: 3;	selected revisions: 3
description:
----------------------------
revision 3\.1
date: [0-9/]* [0-9:]*;  author: ${username};  state: Exp;  lines: ${PLUS}0 -0
bump-it
----------------------------
revision 1\.2
date: [0-9/]* [0-9:]*;  author: ${username};  state: Exp;  lines: ${PLUS}1 -0
modify-it
----------------------------
revision 1\.1
date: [0-9/]* [0-9:]*;  author: ${username};  state: Exp;
add-it
============================================================================="
	  dotest basica-o8 "${testcvs} -q update -p -r 1.1 ./ssfile" "ssfile"
AT_CLEANUP
